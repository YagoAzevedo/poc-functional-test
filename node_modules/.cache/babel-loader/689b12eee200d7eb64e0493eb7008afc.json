{"ast":null,"code":"var _jsxFileName = \"/home/yagoazevedo/workspace/poc-functional-test/src/Contexts/Theme.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Theme = /*#__PURE__*/createContext();\n\nfunction useTheme() {\n  _s();\n\n  const context = useContext(Theme);\n\n  if (context === undefined) {\n    throw new Error('must be used within a provider');\n  }\n\n  return context;\n}\n\n_s(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nfunction ThemeProvider({\n  children\n}) {\n  const value = {\n    color: '#fff'\n  };\n  return /*#__PURE__*/_jsxDEV(Theme.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ThemeProvider;\nexport { ThemeProvider, useTheme };\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["/home/yagoazevedo/workspace/poc-functional-test/src/Contexts/Theme.js"],"names":["React","useContext","createContext","Theme","useTheme","context","undefined","Error","ThemeProvider","children","value","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAiD,OAAjD;;AAEA,MAAMC,KAAK,gBAAGD,aAAa,EAA3B;;AAEA,SAASE,QAAT,GAAoB;AAAA;;AAClB,QAAMC,OAAO,GAAGJ,UAAU,CAACE,KAAD,CAA1B;;AACA,MAAIE,OAAO,KAAKC,SAAhB,EAA2B;AACzB,UAAM,IAAIC,KAAJ,CAAU,gCAAV,CAAN;AACD;;AACD,SAAOF,OAAP;AACD;;GANQD,Q;;AAQT,SAASI,aAAT,CAAuB;AAACC,EAAAA;AAAD,CAAvB,EAAmC;AACjC,QAAMC,KAAK,GAAG;AAACC,IAAAA,KAAK,EAAC;AAAP,GAAd;AACA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAED,KAAvB;AAAA,cACGD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAID;;KANQD,a;AAQT,SAAQA,aAAR,EAAuBJ,QAAvB","sourcesContent":["import React, { useContext, createContext } from \"react\";\n\nconst Theme = createContext();\n\nfunction useTheme() {\n  const context = useContext(Theme)\n  if (context === undefined) {\n    throw new Error('must be used within a provider')\n  }\n  return context\n}\n\nfunction ThemeProvider({children}) {\n  const value = {color:'#fff'}\n  return (\n    <Theme.Provider value={value}>\n      {children}\n    </Theme.Provider>)\n}\n\nexport {ThemeProvider, useTheme}"]},"metadata":{},"sourceType":"module"}